<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_game</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>60</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define global variables
timeTotal = 60;

gameOver = false;

cuadroMandosPosX = 150;
cuadroMandosPosY = 390;

skelleton_in_this_level = false;
skelletonBig_in_this_level = false;
ghost_in_this_level = false;

// Msg Pause 
pause = false;
pauseObj = noone;
pauseBntLeave = noone;
pauseBntContinue = noone;

// Msg Dead
deadMsg = noone;
deadBntLeave = noone;
deadBntBegin = noone;

// Tutorial 
tutorial_mode = false;
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate Time



if (!pause &amp;&amp;  obj_Henrick.Alive == true) {
  if (timeTotal &gt; 0){
    if (obj_Henrick.llegadaMausoleo == false &amp;&amp;  (tutorial_mode == false)){
      timeTotal --;
    }
  } else {
    gameOver = true;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///   Hace el cambio de Background

/*
var active = false;
for (i = 1; i &lt;= 3; i++) {
    if (background_visible[i] == 1){
        background_visible[i] = 0;
       background_visible[(i+1 )mod 4] = 1;     
       active = true;
       break;
    }
}
if (active == false){
     background_visible[1] = 1;
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>60</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_game</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if we have to draw the enemy counters

//If the enemy exists... draw the Enemy Counter
if (instance_exists(obj_Skeleton)) {
    skelleton_in_this_level = true;
}

//If the enemy exists... draw the Enemy Counter
if (instance_exists(obj_SkeletonBig)) {
   skelletonBig_in_this_level = true;
}

//If the enemy exists... draw the Enemy Counter
if (instance_exists(obj_Ghost)){
    ghost_in_this_level = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw pause menu

if (pause &amp;&amp; obj_Henrick.Alive == true ) {
    if (pauseObj == noone &amp;&amp; pauseBntLeave == noone){ 
        pauseObj = instance_create(255, 250, obj_pause);
        pauseBntContinue  = instance_create(340, 250, obj_button_continue);
        pauseBntLeave  = instance_create(340, 310, obj_button_leave);
    }
} else {
    with(pauseBntLeave){ //obj_button_leave){
         instance_destroy();
    }
    with(pauseBntContinue){      //obj_pause){
         instance_destroy();     
    }
    with(pauseObj){      //obj_pause){
         instance_destroy();     
    }
    pauseObj = noone;
    pauseBntContinue = noone;
    pauseBntLeave = noone;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw  Mando etc.

// cuadroMandosPosX  variable global.
draw_sprite(spr_cuadro_mando, 0, cuadroMandosPosX, cuadroMandosPosY);

//Score
var puntos = string_reverse(transformNumberIntoRString(score));
var array = transformStringIntoSpriteArray(puntos, "W");


//draw the rest of the zeros
var remaining_zeros = 6 - array_length_1d(array);

var i;
var posX = cuadroMandosPosX + 130;
var posY = cuadroMandosPosY + 30;
for( i = 0; i &lt; remaining_zeros ; i++){
    draw_sprite(spr_Number_0_W,0 ,posX, posY);
    posX += 20;
}

i = 0;
//draw the Score
for( i = 0; i &lt; array_length_1d(array) ; i++){
    draw_sprite(array[i],0 ,posX, posY);
    posX += 20;
}

var x_cajetin_1 = cuadroMandosPosX + 130;
var y_cajetin= cuadroMandosPosY + 60;

//Segundo cajetin
var x_cajetin_2 = x_cajetin_1 + 40;
draw_sprite(spr_Cajetin_Vacio, 0, x_cajetin_2, y_cajetin);

//Tercer cajetin
draw_sprite(spr_Cajetin_Vacio, 0, x_cajetin_2 + 40, y_cajetin);

//Primer cajetin
if (obj_Henrick.Ammo &lt;= 0) {
   draw_sprite(spr_Cajetin_Vacio, 0, x_cajetin_1, y_cajetin);
  
}else {
   draw_sprite(spr_Cajetin_Bola, 0, x_cajetin_1, y_cajetin);
   draw_sprite_ext(spr_Cajetin_Vacio, 0, x_cajetin_1 + 30, y_cajetin + 25, 0.5, 0.5, 0, c_white, 1 );
   //Dibuja la cantidad de balas que tiene Henrick   
   var ammo = string_reverse(transformNumberIntoRString (obj_Henrick.Ammo));
   var array = 0;
   array[0] = 0; 
   array =  transformStringIntoSpriteArray(ammo, "N"); 
  
   //draw the Ammo
   drawSpriteArray(array, x_cajetin_1, y_cajetin);
}
 
//Dibuja cabeza Henrick
draw_sprite(spr_Cabeza_Henrick, 0, cuadroMandosPosX + 40, cuadroMandosPosY);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Number of enemies

var posX = 430;

if (skelleton_in_this_level){
  posX = drawEnemyCounter(spr_S_cab, posX, obj_Skeleton);
}

if (skelletonBig_in_this_level){
   posX = drawEnemyCounter(spr_SB_cab, posX, obj_SkeletonBig);
}

if (ghost_in_this_level){
   posX = drawEnemyCounter(spr_G_cab, posX, obj_Ghost);
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>501</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_sprite</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_reloj</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dibuja los segundos del reloj
draw_time(string(timeTotal));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change the Hearths

// cuadroMandosPosX  variable global.
var pos_corazones_x = cuadroMandosPosX + 35;
var pos_corazones_y = cuadroMandosPosY + 80;

switch (obj_Henrick.lives ){
 //Dibuja Corazones
 default :  draw_sprite(spr_Corazon_0, 0, pos_corazones_x, pos_corazones_y);
            break;
 case 1 :   draw_sprite(spr_Corazon_1, 0, pos_corazones_x, pos_corazones_y);
            break;
 case 2:    draw_sprite(spr_Corazon_2, 0, pos_corazones_x, pos_corazones_y);
            break;
 case 3:   draw_sprite(spr_Corazon_3, 0, pos_corazones_x, pos_corazones_y);
            break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Control Pad &amp; Action Button
 drawControlPad(cuadroMandosPosX ,cuadroMandosPosY);
 
// Draw Action Button
 drawActionButton(cuadroMandosPosX ,cuadroMandosPosY);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GAME OVER 

if (timeTotal &lt;= 0)  {
   //stop all enemies
   with (obj_Enemy){
     speed = 0;
     image_speed = 0;
     //draw_sprite(spr_Game_OVER, 0, 100, 100);
   }
   if (deadMsg == noone ){ 
        deadMsg = instance_create(255, 250, obj_timeOver);
        deadBntBegin  = instance_create(310, 250, obj_button_begin);
        deadBntLeave  = instance_create(310, 310, obj_button_leave);
    }
}

else{

if (obj_Henrick.Alive == false){
  if (deadMsg == noone ){ 
        deadMsg = instance_create(255, 250, obj_dead);
        deadBntBegin  = instance_create(190, 250, obj_button_begin);
        deadBntLeave  = instance_create(190, 310, obj_button_leave);
    }
} else {
    if (gameOver == false){
        with(deadBntLeave){ 
             instance_destroy();
        }
        with(deadBntBegin){      
             instance_destroy();     
        }
        with(deadMsg){      
             instance_destroy();     
         }
        deadMsg = noone;
        deadBntContinue = noone;
        deadBntLeave = noone;
    }
}

}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// enables/disables pause IF we are not in the tutorial
if (tutorial_mode == false){
 pause = !pause;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
